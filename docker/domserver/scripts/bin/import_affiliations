#!/bin/bash
#
#
# ARG_POSITIONAL_SINGLE([git-repository],[Github repository to download the affiliations from (optional)],[robertdijk/icpc-logos])
# ARG_HELP([Import logos and affiliations from a github repo])
# ARGBASH_GO()
# needed because of Argbash --> m4_ignore([
### START OF CODE GENERATED BY Argbash v2.9.0 one line above ###
# Argbash is a bash code generator used to get arguments parsing right.
# Argbash is FREE SOFTWARE, see https://argbash.io for more info
# Generated online by https://argbash.io/generate


die()
{
	local _ret="${2:-1}"
	test "${_PRINT_HELP:-no}" = yes && print_help >&2
	echo "$1" >&2
	exit "${_ret}"
}


begins_with_short_option()
{
	local first_option all_short_options='h'
	first_option="${1:0:1}"
	test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}

# THE DEFAULTS INITIALIZATION - POSITIONALS
_positionals=()
_arg_git_repository="robertdijk/icpc-logos"
# THE DEFAULTS INITIALIZATION - OPTIONALS


print_help()
{
	printf '%s\n' "Import logos and affiliations from a github repo"
	printf 'Usage: %s [-h|--help] [<git-repository>]\n' "$0"
	printf '\t%s\n' "<git-repository>: Github repository to download the affiliations from (optional) (default: 'robertdijk/icpc-logos')"
	printf '\t%s\n' "-h, --help: Prints help"
}


parse_commandline()
{
	_positionals_count=0
	while test $# -gt 0
	do
		_key="$1"
		case "$_key" in
			-h|--help)
				print_help
				exit 0
				;;
			-h*)
				print_help
				exit 0
				;;
			*)
				_last_positional="$1"
				_positionals+=("$_last_positional")
				_positionals_count=$((_positionals_count + 1))
				;;
		esac
		shift
	done
}


handle_passed_args_count()
{
	test "${_positionals_count}" -le 1 || _PRINT_HELP=yes die "FATAL ERROR: There were spurious positional arguments --- we expect between 0 and 1, but got ${_positionals_count} (the last one was: '${_last_positional}')." 1
}


assign_positional_args()
{
	local _positional_name _shift_for=$1
	_positional_names="_arg_git_repository "

	shift "$_shift_for"
	for _positional_name in ${_positional_names}
	do
		test $# -gt 0 || break
		eval "$_positional_name=\${1}" || die "Error during argument parsing, possibly an Argbash bug." 1
		shift
	done
}

parse_commandline "$@"
handle_passed_args_count
assign_positional_args 1 "${_positionals[@]}"

# OTHER STUFF GENERATED BY Argbash

### END OF CODE GENERATED BY Argbash (sortof) ### ])
# [ <-- needed because of Argbash

tmp_dir=$(mktemp -d -t affiliations-XXXXXXXXXX)

ADMINPASS=$(cat /opt/domjudge/domserver/etc/initial_admin_password.secret)

curl -s https://api.github.com/repos/$_arg_git_repository/releases/latest \
| grep browser_download_url \
| grep transparent_64.zip \
| cut -d : -f 2,3 \
| tr -d \" \
| wget -P $tmp_dir -qi -

curl -s https://api.github.com/repos/$_arg_git_repository/releases/latest \
| grep browser_download_url \
| grep organizations.json \
| cut -d : -f 2,3 \
| tr -d \" \
| wget -P $tmp_dir -qi -


unzip -j -o -q $tmp_dir/transparent_64.zip -d /opt/domjudge/domserver/webapp/public/images/affiliations
# http -a admin:$ADMINPASS --check-status -b -f POST "http://localhost:80/api/users/organizations" json@$tmp_dir/organizations.json --ignore-stdin

rm -rf $tmp_dir

# ] <-- needed because of Argbash
